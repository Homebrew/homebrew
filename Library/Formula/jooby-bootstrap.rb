require "formula"

class JoobyBootstrap < Formula
  homepage "https://github.com/jooby-project/jooby-bootstrap"
  url "https://github.com/jooby-project/jooby-bootstrap/archive/0.2.2.tar.gz"
  sha1 "54802aa2a7bad6a07f25fc4d1dc35767c3525deb"

  depends_on :java => "1.8"
  depends_on "maven"

  def install
    bin.install "jooby"
  end

  def caveats; <<-EOS.undent
    Be aware that jooby-boostrap and jooby depend on having maven3 and java8
    installed.

    Java 8 from Oracle is available in brew-cask `brew cask install java`
    Maven 3 is available from the official brew repository `brew install maven`

    You can also choose to install maven and java8 manually, but why would you?

    EOS
  end

  test do
    (testpath/'pom.xml').write <<-EOS.undent 
      <?xml version="1.0" encoding="UTF-8"?>
      <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
        <modelVersion>4.0.0</modelVersion>
        <parent>
          <groupId>org.jooby</groupId>
          <artifactId>jooby-project</artifactId>
          <version>0.1.0</version>
        </parent>
        <artifactId>brew-example</artifactId>
        <groupId>org.jooby.example</groupId>
        <version>0.0.1-SNAPSHOT</version>
        <name>brew-example</name>
        <description>generated by Jooby archetype</description>
        <properties>
          <jooby.version>0.1.0</jooby.version>
          <!-- Startup class -->
          <application.main>org.jooby.example.App</application.main>
        </properties>

        <dependencies>
          <!-- Jooby -->
          <dependency>
            <groupId>org.jooby</groupId>
            <artifactId>jooby</artifactId>
          </dependency>
          <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </dependency>

          <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
          </dependency>

        </dependencies>

        <build>
          <!-- Build fat jar -->
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-shade-plugin</artifactId>
            </plugin>
          </plugins>
        </build>

      </project>
    EOS
    (testpath/'config/application.conf').write <<-EOS.undent 
      # add or override properties
      # See https://github.com/typesafehub/config/blob/master/HOCON.md for more details
    EOS
    (testpath/'config/logback.dev.xml').write <<-EOS.undent 
      <?xml version="1.0" encoding="UTF-8"?>
      <configuration scan="true" scanPeriod="15 seconds" debug="false">
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
          <encoder>
            <pattern>%-5p [%d{ISO8601}] %msg%n</pattern>
          </encoder>
        </appender>

        <root level="info">
          <appender-ref ref="STDOUT" />
        </root>
      </configuration>
    EOS
    (testpath/'public/assets/css/style.css').write <<-EOS.undent 
      body {
        background-color: #FBFAF7;
        font-size: 14px;
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      }

      .content {
        width: 960px;
        margin: auto;
      }

      h1 {
        font-family: Arvo, Monaco, serif;
        line-height: 1.3;
        font-weight: normal;
      }

      pre {
        font-family: Monaco, "Bitstream Vera Sans Mono", "Lucida Console", Terminal, monospace;
        background-color: #FDFEFB;
        border: 1px solid #D7D8C8;
        border-radius: 4px;
        margin: 0;
        padding: 5px;
        font-weight: normal;
      }

      pre span.kw {
        color: #000;
        font-weight: bold;
      }

      pre span.nc {
        color: #445588;
        font-weight: bold;
      }

      pre span.nn {
        color: #555555;
      }

      pre span.s {
        color: #d14;
        font-weight: bold;
      }

      pre span.nf {
        color: #990000;
        font-weight: bold;
      }

      pre span.na {
        color: #008080;
      }

      a {
        color: #C30000;
        font-weight: 200;
        text-decoration: none;
      }

      a:hover {
        text-decoration: underline;
      }
    EOS
    (testpath/'public/assets/js/index.js').write <<-EOS.undent 
      /*
      here goes the js
      /*
    EOS
    (testpath/'public/assets/js/index.js').write <<-EOS.undent 
      <html>
      <head>
      <title>brew-example</title>
      <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
      <link rel="stylesheet" href="assets/css/style.css">
      </head>
      <body>
        <div class="content">
          <h1>jooby</h1>
          <hr />
          <p>An Express inspired web framework for Java 8 (or higher).</p>

          <pre>
            <span class="kw">import</span> <span class="nn">org.jooby.Jooby</span>;

            <span class="kw">public</span> <span class="kw">class</span> <span class="nc">App</span> <span
              class="kw">extends</span> <span class="nn">Jooby</span> <span class="kw">{</span>

              <span class="kw">{</span>
                get<span class="kw">(</span><span class="s">"/"</span>, <span class="kw">(</span>req, res<span
              class="kw">)</span> <span class="kw">-></span>
                  res.<span class="na">send</span><span class="kw">(</span><span class="s">"Hey Jooby!"</span><span
              class="kw">)</span>
                );
              <span class="kw">}</span>

              <span class="kw">public</span> <span class="kw">static</span> <span class="kw">void</span> <span
              class="nf">main</span><span class="kw">(final</span> String<span class="kw">[]</span> args<span
              class="kw">)</span> <span class="kw">throws</span> Exception <span class="kw">{</span>
                <span class="kw">new</span> <span class="nf">App</span><span class="kw">()</span>.<span
              class="na">start</span><span class="kw">()</span>;
              <span class="kw">}</span>
            <span class="kw">}</span>
          </pre>

          <h1>version</h1>
          <hr />
          <p>0.1.0</p>

          <h1>need help?</h1>
          <hr />
          <ul>
            <li><a href="http://jooby.org">jooby.org</a></li>
            <li><a href="https://github.com/jooby-project/jooby">source code</a></li>
            <li><a href="https://groups.google.com/forum/#!forum/jooby-project">google group</a></li>
            <li><a href="https://github.com/jooby-project/jooby/issues">issues</a></li>
          </ul>

          <h1>license</h1>
          <hr />
          <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache v2.0</a>

          <h1>author</h1>
          <hr />
          <a href="https://twitter.com/edgarespina">Edgar Espina</a>

        </div>

        <script type="text/javascript" src="assets/js/index.js"></script>
      </body>
      </html>
    EOS
    (testpath/'src/main/java/org/jooby/example/App.java').write <<-EOS.undent 
      package org.jooby.example;

      import org.jooby.Jooby;

      /**
       * @author jooby generator
       */
      public class App extends Jooby {

        {
          get("/favicon.ico");

          assets("/assets/**");

          get("/", file("welcome.html"));
        }

        public static void main(final String[] args) throws Exception {
          new App().start(args);
        }

      }
    EOS
    system "#{bin}/jooby", "run"
  end
end
